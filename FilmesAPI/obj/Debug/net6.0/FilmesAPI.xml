<?xml version="1.0"?>
<doc>
    <assembly>
        <name>FilmesAPI</name>
    </assembly>
    <members>
        <member name="M:FilmesAPI.Controllers.FilmeController.AdicionaFilme(FilmesAPI.Data.Dtos.CreateFilmeDto)">
            <summary>
            Adiciona um filme ao banco de dados
            </summary>
            <param name="filmeDto">Objeto com os campos necessátios para criação de um filme</param>
            <returns>IActionResult</returns>
            <response code="201">Caso inserção seja feita com sucesso</response>
        </member>
        <member name="M:FilmesAPI.Controllers.FilmeController.RecuperaFilmes(System.Int32,System.Int32)">
            <summary>
            Recupera filmes cadastrados no banco de dados
            </summary>
            <param name="skip">A partir de qual filme quer ser recuperado</param>
            <param name="take">Número de filmes a serem recuperados</param>
            <returns>IEnumerable ReadFilmeDto </returns>
            <response code="200">Caso a operação seja feita com sucesso</response>
        </member>
        <member name="M:FilmesAPI.Controllers.FilmeController.RecuperaFilmePorId(System.Int32)">
            <summary>
            Recupera um filme cadastrado a partir de seu ID
            </summary>
            <param name="id">Identificador único do filme</param>
            <returns>IActionResult</returns>
            <response code="200">Caso a operação seja feita com sucesso</response>
        </member>
        <member name="M:FilmesAPI.Controllers.FilmeController.AtualizaFilme(System.Int32,FilmesAPI.Data.Dtos.UpdateFilmeDto)">
            <summary>
            Atualiza todos os dados de um filme
            </summary>
            <param name="id">Identificador único do filme</param>
            <param name="filmeDto">Objeto com os campos necessátios para atualização de um filme</param>
            <returns>IActionResult</returns>
            <response code="204">Caso a operação seja feita com sucesso</response>
        </member>
        <member name="M:FilmesAPI.Controllers.FilmeController.AtualizaFilmeParcial(System.Int32,Microsoft.AspNetCore.JsonPatch.JsonPatchDocument{FilmesAPI.Data.Dtos.UpdateFilmeDto})">
            <summary>
            Atualiza um filme a partir de um dado
            </summary>
            <param name="id">Identificador Único do filme</param>
            <param name="patch">Objeto com os campos necessátios para atualização de um filme por PATCH</param>
            <returns>IActionResult</returns>
            <response code="204">Caso a operação seja realizada com sucesso</response>
        </member>
        <member name="M:FilmesAPI.Controllers.FilmeController.DeletaFilme(System.Int32)">
            <summary>
            Deleta um filme a partir de um id
            </summary>
            <param name="id">Identificador únido do filme</param>
            <returns>IActionResult</returns>
            <response code="204">Caso a operação seja realizada com sucesso</response>
        </member>
        <member name="T:FilmesAPI.Migrations.CriandoTabelaDeFilme">
            <inheritdoc />
        </member>
        <member name="M:FilmesAPI.Migrations.CriandoTabelaDeFilme.Up(Microsoft.EntityFrameworkCore.Migrations.MigrationBuilder)">
            <inheritdoc />
        </member>
        <member name="M:FilmesAPI.Migrations.CriandoTabelaDeFilme.Down(Microsoft.EntityFrameworkCore.Migrations.MigrationBuilder)">
            <inheritdoc />
        </member>
        <member name="M:FilmesAPI.Migrations.CriandoTabelaDeFilme.BuildTargetModel(Microsoft.EntityFrameworkCore.ModelBuilder)">
            <inheritdoc />
        </member>
    </members>
</doc>
